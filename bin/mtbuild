#!/bin/bash

VIEWER=""
RARG=""

function printhelp {
  echo "mtbuild -- render LaTeX/Sweave fragments (mt or mp files) or rnw"
  echo "  files to pdf.  mt or mp files will be prefixed and suffixed by"
  echo "  ~/.mtbuild/header.(mt|mp) and ~/.mtbuild/footer.(mt|mp)"
  echo "  respectively.  Files suffixed with mt will be rendered as an"
  echo "  article, and mp as a beamer presentation."
  echo ""
  echo "Usage:"
  echo "  mtbuild [options] file"
  echo "  mtbuild [options] --diff file1 file2"
  echo ""
  echo "Options:"
  echo "  --show-pdf=<foo>  Open resulting pdf in viewer <foo>"
  echo "  --rarg=<foo>      set mtbuild_arg to <foo> in the rnw"
}

SHORT=hs:r:d
LONG=show-pdf:,rarg:,help,diff
TARG1=""
TARG2=""

PARSED=`getopt --options $SHORT --longoptions $LONG --name "$0" -- "$@"`
if [[ $? != 0 ]]; then printhelp ; exit 2 ; fi
eval set -- "$PARSED"

while true ; do 
  case $1 in
    --show-pdf|-s)
      VIEWER="$2"
      shift 2
      ;;
    --rarg|-r)
      RARG="$2"
      shift 2
      ;;
    --help|-h)
      printhelp
      exit 0
      ;;
    --diff|-d)
      DIFF="yes"
      shift
      ;;
    --)
      shift
      break
      ;;
  esac
done

if [[ $DIFF == "yes" ]] ; then 
  TARG1=$1 
  TARG2=$2 
else 
  TARG=$1
fi

function texit { 
  PREFIX=$1; RAW=$2; TEX=$3;
  # We don't allow LaTeX the luxury of talking to the user, because it is too
  # loquacious.
  if [[ -e $TEX ]] 
  then 
    if [[ ! -e _build/$RAW.aux ]] 
    then pdflatex -interaction batchmode -draftmode \
          -output-directory $PREFIX $TEX 2>&1 >> ~/.mtbuild/log
    fi
    pushd $PREFIX 2>&1 >> ~/.mtbuild/log
    bibtex $RAW 2>&1 >> ~/.mtbuild/log
    popd 2>&1 >> ~/.mtbuild/log
    pdflatex -interaction batchmode -draftmode \
      -output-directory $PREFIX $TEX 2>&1 >> ~/.mtbuild/log
    pdflatex -interaction scrollmode \
      -output-directory $PREFIX $TEX 2>&1 >> ~/.mtbuild/log
  else echo "Error in creating tex file.  See ~/.mtbuild/log."
  fi
}

function hidenonstandard {
  cat $1 \
    | sed -e 's/\\party/(d\/dy)/g' \
    | sed -e 's/\\half/(1\/2)/g' \
    | sed -e 's/\\code/CODE/g' \
    | sed -e 's/\\TODO/TODO/g' \
    | sed -e 's/\\impl/IMPL/g' \
    | sed -e 's/\\Var/VAR/g' \
    | sed -e 's/\\Ber/BER/g' \
    | sed -e 's/\\Poly/POLY/g' \
    | sed -e 's/\\Binom/BINOM/g' \
    | sed -e 's/\\Pois/POIS/g' \
    | sed -e 's/\\Cov/COV/g' \
    | sed -e 's/\\Corr/CORR/g' \
    | sed -e 's/\\E/EX/g' \
    | sed -e 's/\\Ex/EX/g' \
    | sed -e 's/\\Erf/ERF/g' \
    | sed -e 's/\\Pro/PROB/g' \
    | sed -e 's/\\N/N/g' \
    | sed -e 's/\\one/ONE/g' \
    | sed -e 's/\\U/U/g' \
    | sed -e 's/\\Z/Z/g' \
    | sed -e 's/\\inv/INVERSE/g' \
    | sed -e 's/\\gene/GENE/g' \
    > $2
}
function hidenewcommand {
  TMP=`mktemp`
  cat $1 | grep -v newcommand > $TMP
  mv $TMP $1
}

if [[ $DIFF == "yes" ]] ; then 
  if [[ ! -e $TARG1 ]] ; then echo "no such file ($TARG1)" ; exit 1 ; fi
  if [[ ! -e $TARG2 ]] ; then echo "no such file ($TARG2)" ; exit 1 ; fi
  TARG1_RAW=`echo -n $TARG1 | sed -e 's/\.\(mt\|Rnw\|rnw\|mp\)$//'`
  TARG2_RAW=`echo -n $TARG2 | sed -e 's/\.\(mt\|Rnw\|rnw\|mp\)$//'`
  TARG1_SUFFIX=`echo -n $TARG1 \
    | sed -e 's/.*\.\(mt\|rnw\|mp\)$/\1/i' | tr 'RNWMTP' 'rnwmtp'`
  TARG2_SUFFIX=`echo -n $TARG2 \
    | sed -e 's/.*\.\(mt\|rnw\|mp\)$/\1/i' | tr 'RNWMTP' 'rnwmtp'`
  TARG1_NAME=`basename $TARG1 | sed -e 's/\.\(mt\|Rnw\|rnw\|mp\)$//'`
  TARG2_NAME=`basename $TARG2 | sed -e 's/\.\(mt\|Rnw\|rnw\|mp\)$//'`
  if [[ $TARG1 -nt _build/$TARG1_RAW-mtbuild-sanitized.pdf ]] ; then 
    TG=$TARG1_RAW-mtbuild-sanitized.$TARG1_SUFFIX
    hidenonstandard $TARG1 $TG
    mtbuild $TG
    hidenewcommand _build/$TARG1_RAW-mtbuild-sanitized.tex
    rm $TG ; fi 
  if [[ $TARG2 -nt _build/$TARG2_RAW-mtbuild-sanitized.pdf ]] ; then 
    TG=$TARG2_RAW-mtbuild-sanitized.$TARG2_SUFFIX
    hidenonstandard $TARG2 $TG
    mtbuild $TG
    hidenewcommand _build/$TARG2_RAW-mtbuild-sanitized.tex
    cat _build/$TARG2_RAW-mtbuild-sanitized.tex | grep -v '\newcommand'
    rm $TG ; fi 
  DIFF_NAME=$TARG1_NAME-$TARG2_NAME.diff

  echo latexdiff _build/$TARG1_RAW-mtbuild-sanitized.tex \
            _build/$TARG2_RAW-mtbuild-sanitized.tex \
    ">" _build/$DIFF_NAME.tex
  latexdiff _build/$TARG1_RAW-mtbuild-sanitized.tex \
            _build/$TARG2_RAW-mtbuild-sanitized.tex \
    > _build/$DIFF_NAME.tex
  texit _build/ $DIFF_NAME _build/$DIFF_NAME.tex
  if [[ -n $VIEWER ]] ; then 
    $VIEWER _build/$DIFF_NAME.pdf & 
  fi
  exit 0
fi

if [[ ! -e $TARG ]] ; then echo "no such file" ; exit 1 ; fi
if [[ ! -d _build ]] ; then mkdir _build \
  || (echo "could not create _build" && exit 1); fi


TARG_PREFIX=_build/`dirname $TARG`
mkdir -p $TARG_PREFIX

TARG_RAW=`echo -n $TARG | sed -e 's/\.\(mt\|Rnw\|rnw\|mp\)$//'`
TARG_SUFFIX=`echo -n $TARG \
  | sed -e 's/.*\.\(mt\|rnw\|mp\)$/\1/i' | tr 'RNWMTP' 'rnwmtp'`
TARG_RNW=_build/$TARG_RAW.rnw
TARG_TEX=_build/$TARG_RAW.tex
TARG_PDF=_build/$TARG_RAW.pdf

echo -n > $TARG_RNW
if [[ -e ~/.mtbuild/header.$TARG_SUFFIX ]] 
then cat ~/.mtbuild/header.$TARG_SUFFIX > $TARG_RNW 
fi
if [[ $TARG_SUFFIX != "rnw" ]] ; then
echo "\\SweaveOpts{prefix=TRUE,prefix.string=_build/$TARG_RAW}" >> $TARG_RNW
echo "\\begin{document}" >> $TARG_RNW
echo "<<echo=FALSE>>=" >> $TARG_RNW
echo "mtbuild_arg=\"$RARG\"" >> $TARG_RNW
echo "source(\"~/.mtbuild/mt-common.R\")" >> $TARG_RNW
echo "@" >> $TARG_RNW
cat $TARG >> $TARG_RNW
cp ~/.mtbuild/refstyle.bst $TARG_PREFIX
else
cat $TARG | sed -e "s/\\(\\\\usepackage.*{Sweave}\\)/\\1\\n\\\\SweaveOpts{prefix=TRUE,prefix.string=_build\\/$TARG_RAW}/" \
  >> $TARG_RNW
# This covers the case that the rnw file refers to a bst in the same directory
# without doing too much harm.  Ideally, we would parse the rnw file for
# \bibliographystyle and move that appropriately.
if [[ -e *.bst ]] ; then cp *.bst $TARG_PREFIX ; fi
fi
if [[ -e ~/.mtbuild/footer.$TARG_SUFFIX ]] 
then cat ~/.mtbuild/footer.$TARG_SUFFIX >> $TARG_RNW
fi
if [[ -e ./index.bib ]]
then # Important to remove file first, rather than copy
rm $TARG_PREFIX/index.bib ; cp index.bib $TARG_PREFIX/index.bib
else
ln -sf ~/.mtbuild/index.bib $TARG_PREFIX/index.bib
fi

# Try to suppress messages from libraries in order to allow actual errors
# from R to bubble up to the user
read -d '' SWEAVE_CMD <<EOM
Sweave("$TARG_RNW",output="$TARG_TEX");
EOM

echo $SWEAVE_CMD | R --vanilla &> ~/.mtbuild/log
if [ $? -eq 0 ] ; then
  texit $TARG_PREFIX $TARG_RAW $TARG_TEX
fi

if [[ -n $VIEWER ]] ; then 
  $VIEWER $TARG_PDF &
fi
